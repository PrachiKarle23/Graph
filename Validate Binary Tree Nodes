class Solution {
public:
    bool validateBinaryTreeNodes(int n, vector<int>& leftChild,
                                 vector<int>& rightChild) {

        vector<int> indegree(n, 0),outdegree(n,0);
        for (int i = 0; i < n; i++) {
            if (leftChild[i] != -1) {
                indegree[leftChild[i]]++;
                outdegree[i]++;
            }
            if (rightChild[i] != -1) {
                indegree[rightChild[i]]++;
                outdegree[i]++;
            }
        }
        int cnt = 0,cnt1=0;
        for (int i = 0; i < n; i++) {
            cout << indegree[i] << " ";
            if (indegree[i] == 0) {
                cnt++;
            }
            if (indegree[i] == 2) {
                return false;
            }
            if(outdegree[i]==2){
                cnt1++;
            }
        }
        if (cnt != 1 || cnt1<1) {
            return false;
        }
        return true;
    }
};
