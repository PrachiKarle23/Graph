class Solution {
public:
   unordered_map<int, set<int>> adj;
    void solve(int i, int j, int& cnt, vector<bool>& vis) {
        vis[i] = true;
        for (auto l : adj[i]) {
            if (!vis[l]) {
                cnt++;
            }
        }

        vis[j] = true;
        for (auto l : adj[j]) {
            if (!vis[l]) {
                cnt++;
            }
        }
    }
    int maximalNetworkRank(int n, vector<vector<int>>& roads) {
        int m = roads.size();

        for (int i = 0; i < m; i++) {
            int u = roads[i][0];
            int v = roads[i][1];
            adj[u].insert(v);
            adj[v].insert(u);
        }

        int maxiCnt = INT_MIN;
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                int cnt = 0;
                vector<bool> vis(n, false);
                solve(i, j, cnt, vis);
                maxiCnt = max(cnt, maxiCnt);
            }
        }
        return maxiCnt;
    }
};
