class Solution {
public:
    static bool cmp(pair<int,int>a,pair<int,int>b)
    {
        return a.second>b.second;
    }
    long long maximumImportance(int n, vector<vector<int>>& roads) {
        vector<long long>indegree(n,0);
        for (int i = 0; i < roads.size(); i++) {
            indegree[roads[i][0]]++;
            indegree[roads[i][1]]++;
        }

        vector<pair<int,long long>>cities;
        
        for (int i = 0; i < n; i++) {
           pair<int,int>p=make_pair(i,indegree[i]);
           cities.push_back(p);
        }

        sort(cities.begin(), cities.end(),cmp);
        long long ans = 0;
        for (int i = 0; i < n; i++) {
            ans += (n-i) * cities[i].second;
        }
        return ans;
    }
};
