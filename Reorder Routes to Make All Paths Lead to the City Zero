class Solution {
public:
    void dfs(unordered_map<int,set<int>>& adj,int node,vector<bool>& vis,int &cnt)
    {
        vis[node]=true;
        for(auto i:adj[node])
        {
            if(!vis[i])
            {
                cnt++;
                dfs(adj,i,vis,cnt);
            }
        }
    }
    int minReorder(int n, vector<vector<int>>& connections) {
        unordered_map<int,set<int>>adj;
        int e=connections.size();
        int cnt=0;

        for(int i=0;i<e;i++)
        {
            int u=connections[i][0];
            int v=connections[i][1];
            adj[u].insert(v);
        }
        vector<bool>vis(n,false);
        for(int i=0;i<n;i++)
        {
            if(!vis[i])
            {
                dfs(adj,i,vis,cnt);
            }
        }
        return cnt;
    }
};
