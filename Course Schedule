class Solution {
public:
    bool canFinish(int numCourses, vector<vector<int>>& prerequisites) {
        unordered_map<int,set<int>>adj;
        int e=prerequisites.size();
        for(int i=0;i<e;i++)
        {
           int u=prerequisites[i][0];
           int v=prerequisites[i][1];
           adj[v].insert(u);
        }

        vector<int>indegree(numCourses);
        for(auto i:adj)
        {
            for(auto j:i.second){
                indegree[j]++;
            }
        }

        queue<int>q;

        for(int i=0;i<numCourses;i++)
        {
            if(indegree[i]==0){
                cout<<i<<" ";
                q.push(i);
            }
        }
        int cnt=0;
        while(!q.empty())
        {
            int front=q.front();
            q.pop();
            cnt++;
            for(auto i:adj[front]){
                indegree[i]--;

                if(indegree[i]==0){
                    q.push(i);
                }
            }
        }
        if(cnt==numCourses){
            return true;
        }
        return false;
    }
};
