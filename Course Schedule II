class Solution {
public:
    vector<int> findOrder(int numCourses, vector<vector<int>>& prerequisites) {
        unordered_map<int, set<int>> adj;
        int e = prerequisites.size();

        for (int i = 0; i < e; i++) {
            int u = prerequisites[i][0];
            int v = prerequisites[i][1];

            adj[v].insert(u);
        }

        vector<int>indegree(numCourses,0);
        for(auto i:adj)
        {
            for(auto j:i.second)
            {
                indegree[j]++;
            }
        }

        queue<int>q;
        for(int i=0;i<numCourses;i++)
        {
            if(indegree[i]==0){
                q.push(i);
            }
        }

        vector<int>ans;
        while(!q.empty())
        {
            int front=q.front();
            q.pop();
            
            for(auto i:adj[front])
            {
                indegree[i]--;
                if(indegree[i]==0)
                {
                    q.push(i);
                }
            }
            ans.push_back(front);
        }
        if(ans.size()!=numCourses)
        {
            ans.clear();
        }
        return ans;
    }
};
